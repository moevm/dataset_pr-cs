head_moves = {'R': 1, 'L': -1, 'N': 0}

status_table = {
    'q1': {'a': 'a,R,q2', 'b': 'b,R,q3', 'c': 'c,R,q2', ' ': ' ,R,q1'}, #поиск начала строки
    'q2': {'a': 'a,R,q2', 'b': 'b,R,q3', 'c': 'c,R,q2', ' ': ' ,L,q18'}, #поиск 1го символа b или его отсутствия
    'q3': {'a': ' ,R,q4', 'b': ' ,R,q4', 'c': ' ,R,q4', ' ': ' ,L,q17'}, #поиск 1го символа после b(замена на ' ') или его отсутствия
    'q4': {'a': ' ,R,q5', 'b': ' ,R,q5', 'c': ' ,R,q5', ' ': ' ,N,q20'}, #поиск 2го символа b(замена на ' ') или его отсутствия
    'q5': {'a': 'a,L,q6', 'b': 'b,L,q6', 'c': 'c,L,q6', ' ': ' ,N,q20'}, #поиск хвоста
    'q6': {'a': 'a,L,q7', 'b': 'b,L,q7', 'c': 'c,L,q7', ' ': ' ,L,q6'}, #сдвиг до разрыва(конец головы)
    'q7': {'a': 'a,L,q7', 'b': 'b,L,q7', 'c': 'c,L,q7', ' ': ' ,R,q8'}, #1й сдвиг до начала
    'q8': {'a': ' ,R,q9', 'b': ' ,R,q10', 'c': ' ,R,q11'}, #начало 1го сдвига посимвольно на 1 шаг
    'q9': {'a': 'a,R,q9', 'b': 'a,R,q10', 'c': 'a,R,q11', ' ': 'a,L,q12'}, #сдвиг головы к хвосту на 1 шаг. Если найден пробел -- 2й сдвиг до начала
    'q10': {'a': 'b,R,q9', 'b': 'b,R,q10', 'c': 'b,R,q11', ' ': 'b,L,q12'},
    'q11': {'a': 'c,R,q9', 'b': 'c,R,q10', 'c': 'c,R,q11', ' ': 'c,L,q12'},
    'q12': {'a': 'a,L,q12', 'b': 'b,L,q12', 'c': 'c,L,q12', ' ': ' ,R,q13'},#2й сдвиг до начала
    'q13': {'a': ' ,R,q14', 'b': ' ,R,q15', 'c': ' ,R,q16'}, #начало 2го сдвига посимвольно на 1 шаг
    'q14': {'a': 'a,R,q14', 'b': 'a,R,q15', 'c': 'a,R,q16', ' ': 'a,N,q20'}, #сдвиг головы к хвосту на 1 шаг. Если найден пробел -- конец работы
    'q15': {'a': 'b,R,q14', 'b': 'b,R,q15', 'c': 'b,R,q16', ' ': 'b,N,q20'},
    'q16': {'a': 'c,R,q14', 'b': 'c,R,q15', 'c': 'c,R,q16', ' ': 'c,N,q20'},
    'q17': {'b': ' ,N,q20'}, #b -- последний, замена на ' '
    'q18': {'a': 'a,L,q18', 'b': 'b,L,q18', 'c': 'c,L,q18', ' ': ' ,R,q19'}, #сдвиг до начала для удаления 1го символа
    'q19': {'a': ' ,N,q20', 'b': ' ,N,q20', 'c': ' ,N,q20'}, #удаление 1го символа
    }
tape = list(input())

status = 'q1'
head = 0
while status != 'q20':
    data, move, status_update = status_table[status][tape[head]].split(',')
    tape[head] = data
    head += head_moves[move]
    status = status_update

print(''.join(tape))